@ require trident-util:generators
@ require anonymous_resources:score

# Get the list of all items, put air at first index
var items = JSON.parse(File.in.read('data/items.json')).values
eval items.remove(items.indexOf('minecraft:air'))
eval items.insert('minecraft:air', 0)


var id = anonymous_score()

define function /tick {
    @ tag tick
    as @a function /..
}

# If it has a custom id, use that
set $id = @s.HandItems[0].tag.inventory_tweaks.id

# Otherise this is a vanilla item
var max_bit = Math.ceil(Math.log2(items.length))
if score deref $id matches 0 function /vanilla {
    for (var i = 0; i < max_bit; i++) {
        _predicate ${resource</> / i} {
            -condition entity_properties
            -entity this
            -predicate {
                -equipment {
                    -mainhand {
                        -items ${items.filter(function (v, index) { return (index & (1 << i)) != 0 })}
                    }
                }
            }
        }
        if predicate ${resource</> / i} set $id += ${1 << i}
    }
}

var i = 0
var location = resource</vanilla2>
eval generateFunctionTree(
    resource</vanilla2>,
    int_range<0..${items.length}>,
    4,
    function (range, next) {
        _predicate ${location / i} {
            -condition entity_properties
            -entity this
            -predicate {
                -equipment {
                    -mainhand {
                        -items ${new List(items).slice(range.min, range.max).base}
                    }
                }
            }
        }
        if predicate ${location / i} function $next
        eval i++
    },
    function (j) {
        _predicate ${location / i++} {
            -condition entity_properties
            -entity this
            -predicate {
                -equipment {
                    -mainhand {
                        -items [${items[j]}]
                    }
                }
            }
        }
        if predicate ${location / i} set $id = $j
    }
)
if score deref $id matches 0 function /vanilla2
