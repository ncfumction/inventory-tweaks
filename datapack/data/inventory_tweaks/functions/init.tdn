@ on compile
@ priority 100000
@ require anonymous_resources:score
@ require anonymous_resources:storage

# Install the yellow shulker box loot table
eval File.out.writeData(
    'data/minecraft/loot_tables/blocks/yellow_shulker_box.json',
    File.in.read('data/yellow_shulker_box.json')
)

# Run something on load
global var on_load = function (callback: function) {
    eval Reflection.insertToFile(resource<inventory_tweaks:load>, callback)
}

# An increasing score for time since load
global var time_since_load = anonymous_score()
eval on_load(function () { set $time_since_load = 0 })
# Time since load functions
var time = anonymous_score()
var time_storage = anonymous_storage()
global var formatted_time = function () {
    set $time_storage = [0, 0, 0, 0, 0, 0, 0]
    set ${(time_storage >> 0) / 7200000 % 'int'} = $time_since_load
    set $time = $time_since_load
    set $time %= 7200000
    set ${(time_storage >> 1) / 720000 % 'int'} = $time
    set $time = $time_since_load
    set $time %= 720000
    set ${(time_storage >> 2) / 72000 % 'int'} = $time
    set $time = $time_since_load
    set $time %= 72000
    set ${(time_storage >> 3) / 12000 % 'int'} = $time
    set $time = $time_since_load
    set $time %= 12000
    set ${(time_storage >> 4) / 1200 % 'int'} = $time
    set $time = $time_since_load
    set $time %= 1200
    set ${(time_storage >> 5) / 200 % 'int'} = $time
    set $time = $time_since_load
    set $time %= 200
    set ${(time_storage >> 6) / 20 % 'int'} = $time
    return [
        {nbt: (string)(time_storage >> 0).member, storage: time_storage.target},
        {nbt: (string)(time_storage >> 1).member, storage: time_storage.target},
        {nbt: (string)(time_storage >> 2).member, storage: time_storage.target}, ' : ',
        {nbt: (string)(time_storage >> 3).member, storage: time_storage.target},
        {nbt: (string)(time_storage >> 4).member, storage: time_storage.target}, ' : ',
        {nbt: (string)(time_storage >> 5).member, storage: time_storage.target},
        {nbt: (string)(time_storage >> 6).member, storage: time_storage.target}
    ]
}

# Load a chunk for various purposes
var random: Random = new Random(number_hash(''))
global var load_x: int= random.nextInt(10000000 / 16) * 16 + 20000000
global var load_z: int = random.nextInt(10000000 / 16) * 16 + 20000000
global var load_coords = function (x: real, y: real, z: real): coordinates {
    return coordinates<0 0 0>
        .deriveMagnitude(load_x + x, Axis.X)
        .deriveMagnitude(y, Axis.Y)
        .deriveMagnitude(load_z + z, Axis.Z)
}
eval on_load(function () { in overworld forceload add ${load_coords(0, 0, 0)} })

# Set if needed and return a shulker box's coordinates
var loaded_shulker_box = [null] * 255
global var shulker_box = function (y: int): coordinates {
    if (loaded_shulker_box[y] == null) {
        eval loaded_shulker_box[y] = load_coords(0, y, 0)
        eval on_load(function () { in overworld setblock ${load_coords(0, y, 0)} minecraft:yellow_shulker_box })
    }
    return loaded_shulker_box[y]
}

# Set if needed and return a sign's coordinates
var loaded_sign = [null] * 255
global var sign = function (y: int): coordinates {
    if (loaded_sign[y] == null) {
        eval loaded_sign[y] = load_coords(1, y, 0)
        eval on_load(function () { in overworld setblock ${load_coords(1, y, 0)} minecraft:dark_oak_sign })
    }
    return loaded_sign[y]
}

# Create the required tags
define function / {
    @ tag remove
    _tag block /../chests [minecraft:chest, minecraft:trapped_chest]
    _tag block /../containers [#inventory_tweaks:chests, minecraft:barrel, #minecraft:shulker_boxes]
    _tag block /../see_through ${JSON.parse(File.in.read('data/see_through_blocks.json')).values}
}
